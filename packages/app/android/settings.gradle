rootProject.name = 'BaronWallet'

// Resolve Expo autolinking configuration
def expoPackagePath = ["node", "--print", "require.resolve('expo/package.json')"]
    .execute(null, rootDir).text.trim()
apply from: new File(expoPackagePath, "../scripts/autolinking.gradle")

// Use Expo modules
useExpoModules()

// Resolve React Native CLI Android platform configuration
def reactNativeCLIPath = ["node", "--print", "require.resolve('@react-native-community/cli-platform-android/package.json')"]
    .execute(null, rootDir).text.trim()
apply from: new File(reactNativeCLIPath, "../native_modules.gradle")

// Apply native modules settings
applyNativeModulesSettingsGradle(settings)

// Include project modules
include ':app'
include ':lib-keys-secret'
includeBuild('../../../node_modules/react-native-gradle-plugin')

// Include custom modules
include ':lib-tabview'

// Include push notification modules
include ':jpush-react-native'
project(':jpush-react-native').projectDir = new File(
    rootProject.projectDir, 
    '../../../node_modules/jpush-react-native/android'
)

include ':jcore-react-native'
project(':jcore-react-native').projectDir = new File(
    rootProject.projectDir, 
    '../../../node_modules/jcore-react-native/android'
)
